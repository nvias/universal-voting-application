# NVIAS Voting System - Portainer Production Configuration with Traefik
# Use this configuration for Portainer deployment with Traefik reverse proxy

version: '3.9'

services:
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-voting_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_production_password}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      # Use Docker managed volumes for Portainer compatibility
      - postgres_data_portainer:/var/lib/postgresql/data
      - backup_data_portainer:/backups
    networks:
      - local
      - proxy
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-voting_db}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    labels:
      - "com.docker.compose.project=${COMPOSE_PROJECT_NAME:-nvias-voting}"
      - "com.docker.compose.service=db"
      - "backup.enable=true"

  voting-app:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      FLASK_ENV: ${FLASK_ENV:-production}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-secure_production_password}@db:5432/${POSTGRES_DB:-voting_db}
      SECRET_KEY: ${SECRET_KEY:-change-this-secret-key-for-production}
      APP_URL: ${APP_URL:-https://voting.example.com}
      CORS_ORIGINS: ${CORS_ORIGINS:-*}
      # Database connection settings for reliability
      SQLALCHEMY_ENGINE_OPTIONS: '{"pool_pre_ping": true, "pool_recycle": 300, "pool_timeout": 30, "pool_size": 10, "max_overflow": 20}'
    networks:
      - local
      - proxy
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # Use Docker managed volumes
      - app_data_portainer:/app/data
      - backup_data_portainer:/app/backups
      - logs_data_portainer:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    # Traefik Labels for reverse proxy and SSL
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_proxy"
      # HTTP
      - "traefik.http.routers.web_${COMPOSE_PROJECT_NAME:-nvias-voting}.entrypoints=web"
      - "traefik.http.routers.web_${COMPOSE_PROJECT_NAME:-nvias-voting}.rule=Host(`${WEB_DOMAIN:-voting.localhost}`)"
      - "traefik.http.routers.web_${COMPOSE_PROJECT_NAME:-nvias-voting}.middlewares=web_${COMPOSE_PROJECT_NAME:-nvias-voting}_https"
      - "traefik.http.middlewares.web_${COMPOSE_PROJECT_NAME:-nvias-voting}_https.redirectscheme.scheme=https"
      # HTTPS
      - "traefik.http.routers.web_${COMPOSE_PROJECT_NAME:-nvias-voting}-https.entrypoints=websecure"
      - "traefik.http.routers.web_${COMPOSE_PROJECT_NAME:-nvias-voting}-https.rule=Host(`${WEB_DOMAIN:-voting.localhost}`)"
      - "traefik.http.routers.web_${COMPOSE_PROJECT_NAME:-nvias-voting}-https.tls=true"
      - "traefik.http.routers.web_${COMPOSE_PROJECT_NAME:-nvias-voting}-https.tls.certresolver=${CERT_RESOLVER:-main-resolver}"
      - "traefik.http.services.web_${COMPOSE_PROJECT_NAME:-nvias-voting}-https.loadbalancer.server.port=5000"
      - "com.docker.compose.project=${COMPOSE_PROJECT_NAME:-nvias-voting}"
      - "com.docker.compose.service=voting-app"

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@nvias.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin_password}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    networks:
      - local
      - proxy
    depends_on:
      - db
    volumes:
      - pgadmin_data_portainer:/var/lib/pgadmin
    profiles:
      - tools  # Use profiles to make this optional
    # Traefik Labels for pgAdmin
    labels:
      - "traefik.enable=${PGADMIN_ENABLE:-false}"
      - "traefik.docker.network=traefik_proxy"
      # HTTP
      - "traefik.http.routers.pgadmin_${COMPOSE_PROJECT_NAME:-nvias-voting}.entrypoints=web"
      - "traefik.http.routers.pgadmin_${COMPOSE_PROJECT_NAME:-nvias-voting}.rule=Host(`${PGADMIN_DOMAIN:-pgadmin.localhost}`)"
      - "traefik.http.routers.pgadmin_${COMPOSE_PROJECT_NAME:-nvias-voting}.middlewares=pgadmin_${COMPOSE_PROJECT_NAME:-nvias-voting}_https"
      - "traefik.http.middlewares.pgadmin_${COMPOSE_PROJECT_NAME:-nvias-voting}_https.redirectscheme.scheme=https"
      # HTTPS
      - "traefik.http.routers.pgadmin_${COMPOSE_PROJECT_NAME:-nvias-voting}-https.entrypoints=websecure"
      - "traefik.http.routers.pgadmin_${COMPOSE_PROJECT_NAME:-nvias-voting}-https.rule=Host(`${PGADMIN_DOMAIN:-pgadmin.localhost}`)"
      - "traefik.http.routers.pgadmin_${COMPOSE_PROJECT_NAME:-nvias-voting}-https.tls=true"
      - "traefik.http.routers.pgadmin_${COMPOSE_PROJECT_NAME:-nvias-voting}-https.tls.certresolver=${CERT_RESOLVER:-main-resolver}"
      - "traefik.http.services.pgadmin_${COMPOSE_PROJECT_NAME:-nvias-voting}-https.loadbalancer.server.port=80"
      - "com.docker.compose.project=${COMPOSE_PROJECT_NAME:-nvias-voting}"
      - "com.docker.compose.service=pgadmin"

# Docker managed volumes - these will be created by Docker/Portainer
volumes:
  postgres_data_portainer:
    driver: local
    labels:
      - "com.docker.compose.project=${COMPOSE_PROJECT_NAME:-nvias-voting}"
      - "backup.enable=true"
  
  app_data_portainer:
    driver: local
    labels:
      - "com.docker.compose.project=${COMPOSE_PROJECT_NAME:-nvias-voting}"
  
  backup_data_portainer:
    driver: local
    labels:
      - "com.docker.compose.project=${COMPOSE_PROJECT_NAME:-nvias-voting}"
      - "backup.enable=true"
  
  logs_data_portainer:
    driver: local
    labels:
      - "com.docker.compose.project=${COMPOSE_PROJECT_NAME:-nvias-voting}"
  
  pgadmin_data_portainer:
    driver: local
    labels:
      - "com.docker.compose.project=${COMPOSE_PROJECT_NAME:-nvias-voting}"

networks:
  local:
    driver: bridge
    labels:
      - "com.docker.compose.project=${COMPOSE_PROJECT_NAME:-nvias-voting}"
  proxy:
    external: true
    name: "traefik_proxy"
